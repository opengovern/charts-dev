apiVersion: apps/v1
kind: Deployment
metadata:
  name: query-runner-worker
  namespace: {{ .Release.Namespace }}
  labels:
    app: query-runner-worker
    cloudql-enabled: "true"
spec:
  minReadySeconds: 10
  replicas: 1
  selector:
    matchLabels:
      app: query-runner-worker
  template:
    metadata:
      labels:
        app: query-runner-worker
        cloudql-enabled: "true"
    spec:
      containers:
        - name: query-runner-worker
          image: "{{ .Values.opengovernance.docker.registry }}/query-runner-job:{{ .Values.opengovernance.docker.tags.queryRunnerJob }}"
          command: ["/query-runner-job"]
          args:
            - --id=$(WORKER_ID)
          imagePullPolicy: Always
          #resources:
          #  limits:
          #    cpu: 500m
          #    memory: 1Gi
          #  requests:
          #    cpu: 500m
          #    memory: 100Mi
          env:
            - name: POSTGRESPLUGIN_HOST
              value: "{{ include "postgres.endpoint" . }}"
            - name: POSTGRESPLUGIN_PORT
              value: "{{ include "postgres.port" . }}"
            - name: POSTGRESPLUGIN_USERNAME
              value: "steampipe_user"
            - name: POSTGRESPLUGIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: steampipeUserPassword
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: steampipeUserPassword
            - name: CORE_DB_HOST
              value: "{{ include "postgres.endpoint" . }}"
            - name: CORE_DB_PORT
              value: "{{ include "postgres.port" . }}"
            - name: CORE_DB_SSL_MODE
              value: "{{ include "postgres.sslMode" . }}"
            - name: STEAMPIPE_LOG_LEVEL
              value: "WARN"
            - name: STEAMPIPE_MAX_PARALLEL
              value: "50"
            - name: STEAMPIPE_CACHE
              value: "false"
            - name: STEAMPIPE_UPDATE_CHECK
              value: "false"
            - name: NATS_URL
              value: "{{ .Release.Name }}-nats.{{ .Release.Namespace }}.svc.cluster.local:4222"
{{- include "elastic.envs" . | indent 12 }}
            - name: COMPLIANCE_BASEURL
              value: "http://compliance-service.{{ .Release.Namespace }}.svc.cluster.local:7251"
            - name: SCHEDULER_BASEURL
              value: "http://scheduler.{{ .Release.Namespace }}.svc.cluster.local:5251"
            - name: INTEGRATION_BASEURL
              value: "http://integration-service.{{ .Release.Namespace }}.svc.cluster.local:8000"
            - name: CORE_BASEURL
              value: "http://core-service.{{ .Release.Namespace }}.svc.cluster.local:6251"
            - name: ESSINK_BASEURL
              value: "http://es-sink-service.{{ .Release.Namespace }}.svc.cluster.local:8000"

            - name: PROMETHEUS_PUSH_ADDRESS
              value: "prom-system-prometheus-pushgateway.prom-system.svc.cluster.local:9091"

            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: JAEGER_SERVICE_NAME
              value: "query-runner-worker"
            - name: JAEGER_SAMPLE_RATE
              value: "0.0005"