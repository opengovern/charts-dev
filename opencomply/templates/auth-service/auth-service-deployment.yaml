---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secret
  namespace: {{ .Release.Namespace }}

  annotations:
    kubernetes.io/service-account.name: auth-service
type: kubernetes.io/service-account-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: auth-service
spec:
  minReadySeconds: 10
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      serviceAccountName: auth-service
      containers:
        - name: auth-service
          image: "{{ .Values.opengovernance.docker.registry }}/auth-service:{{ .Values.opengovernance.docker.tags.auth }}"
          command: [ "/auth-service" ]
          imagePullPolicy: Always
          env:
            - name: PLATFORM_HOST
              value: {{ .Values.global.domain }}
            - name: POSTGRESQL_HOST
              value: "{{ include "postgres.endpoint" . }}"
            - name: POSTGRESQL_PORT
              value: "{{ include "postgres.port" . }}"
            - name: POSTGRESQL_DB
              value: "auth"
            - name: POSTGRESQL_USERNAME
              value: "auth_service"
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: authServiceUserPassword
            - name: POSTGRESQL_SSLMODE
              value: "{{ include "postgres.sslMode" . }}"
            - name: HTTP_ADDRESS
              value: "0.0.0.0:8251"
            - name: GRPC_ADDRESS
              value: "0.0.0.0:50051"
            - name: INVITE_LINK_TEMPLATE
              value: "https://{{ .Values.global.domain }}/invitation?id=%s"
            - name: AUTH0_INVITE_TTL
              value: "21600"
            - name: AUTH0_MANAGE_DOMAIN
              value: "https://kaytu.us.auth0.com"
            - name: AUTH0_DOMAIN
              value: "https://kaytu.us.auth0.com/"
            - name: DEX_AUTH_DOMAIN
              value: "http://{{ .Release.Name }}-dex.{{ .Release.Namespace }}.svc.cluster.local:5556/dex"
            - name: DEX_AUTH_PUBLIC_CLIENT_ID
              value: public-client
            - name: PLATFORM_KEY_ENABLED
              value: "{{ .Values.opengovernance.apikey.enabled }}"
            - name: PLATFORM_PUBLIC_KEY
              value: "{{ .Values.opengovernance.apikey.public }}"
            - name: PLATFORM_PRIVATE_KEY
              value: "{{ .Values.opengovernance.apikey.private }}"
            - name: GRPC_TLS_CERT_PATH
              value: /etc/certs/tls.crt
            - name: GRPC_TLS_KEY_PATH
              value: /etc/certs/tls.key
            - name: GRPC_TLS_CA_PATH
              value: /etc/certs/ca.crt
            - name: COMPLIANCE_BASE_URL
              value: "http://compliance-service.{{ .Release.Namespace }}.svc.cluster.local:7251"
            - name: INTEGRATION_BASE_URL
              value: "http://integration-service.{{ .Release.Namespace }}.svc.cluster.local:8000"
            - name: DESCRIBE_BASE_URL
              value: "http://scheduler.{{ .Release.Namespace }}.svc.cluster.local:5251"
            - name: METADATA_BASE_URL
              value: "http://metadata-service.{{ .Release.Namespace }}.svc.cluster.local:6251"
            - name: DEX_GRPC_ADDR
              value: "{{ .Release.Name }}-dex.{{ .Release.Namespace }}.svc.cluster.local:5557"
            - name: WORKSPACE_NAME
              value: "main"
            - name: DEX_CALLBACK_URL
              value: "https://{{ .Values.global.domain }}/dex/callback,http://{{ .Values.global.domain }}/dex/callback,http://localhost:3000/dex/callback,http://localhost:8080/dex/callback"
            - name: NAMESPACE
              value: "{{ .Release.Namespace }}"