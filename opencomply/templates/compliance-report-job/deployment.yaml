apiVersion: apps/v1
kind: Deployment
metadata:
  name: compliance-worker
  namespace: {{ .Release.Namespace }}
  labels:
    app: compliance-worker
    cloudql-enabled: true
spec:
  minReadySeconds: 10
  replicas: 1
  selector:
    matchLabels:
      app: compliance-worker
  template:
    metadata:
      labels:
        app: compliance-worker
        cloudql-enabled: true
    spec:
      serviceAccountName: compliance-report-worker
      containers:
        - name: compliance-worker
          image: "{{ .Values.opengovernance.docker.registry }}/compliance-report-job:{{ .Values.opengovernance.docker.tags.complianceReportJob }}"
          command: ["/compliance-report-job"]
          args:
            - --id=$(WORKER_ID)
          imagePullPolicy: Always
          #resources:
          #  limits:
          #    cpu: 2000m
          #    memory: 3Gi
          #  requests:
          #    cpu: 1000m
          #    memory: 3Gi
          env:
#            - name: STEAMPIPE_HOST
#              value: "compliance-worker-steampipe"
#            - name: STEAMPIPE_PORT
#              value: "9193"
#            - name: STEAMPIPE_USERNAME
#              value: "steampipe"
#            - name: STEAMPIPE_PASSWORD
#              value: "abcd"
#            - name: STEAMPIPE_DB
#              value: "steampipe"
            - name: POSTGRESPLUGIN_HOST
              value: "{{ include "postgres.endpoint" . }}"
            - name: POSTGRESPLUGIN_PORT
              value: "{{ include "postgres.port" . }}"
            - name: POSTGRESPLUGIN_USERNAME
              value: "steampipe_user"
            - name: POSTGRESPLUGIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: steampipeUserPassword
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: steampipeUserPassword
            - name: CORE_DB_HOST
              value: "{{ include "postgres.endpoint" . }}"
            - name: CORE_DB_PORT
              value: "{{ include "postgres.port" . }}"
            - name: CORE_DB_SSL_MODE
              value: "{{ include "postgres.sslMode" . }}"
            - name: STEAMPIPE_LOG_LEVEL
              value: "WARN"
            - name: STEAMPIPE_MAX_PARALLEL
              value: "50"
            - name: STEAMPIPE_CACHE
              value: "false"
            - name: STEAMPIPE_UPDATE_CHECK
              value: "false"
            - name: NATS_URL
              value: "{{ .Release.Name }}-nats.{{ .Release.Namespace }}.svc.cluster.local:4222"
{{- include "elastic.envs" . | indent 12 }}
            - name: COMPLIANCE_BASEURL
              value: "http://compliance-service.{{ .Release.Namespace }}.svc.cluster.local:7251"
            - name: SCHEDULER_BASEURL
              value: "http://scheduler.{{ .Release.Namespace }}.svc.cluster.local:5251"
            - name: CORE_BASEURL
              value: "http://core-service.{{ .Release.Namespace }}.svc.cluster.local:6251"
            - name: INTEGRATION_BASEURL
              value: "http://integration-service.{{ .Release.Namespace }}.svc.cluster.local:8000"
            - name: ESSINK_BASEURL
              value: "http://es-sink-service.{{ .Release.Namespace }}.svc.cluster.local:8000"

            - name: PROMETHEUS_PUSH_ADDRESS
              value: "prom-system-prometheus-pushgateway.prom-system.svc.cluster.local:9091"

            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: JAEGER_SERVICE_NAME
              value: "compliance-worker"
            - name: JAEGER_SAMPLE_RATE
              value: "0.0005"
          volumeMounts:
            - name: compliance-worker-postgres-config
              mountPath: /home/steampipe/.steampipe/db/14.2.0/data/postgresql.conf.d/optimization.conf
              subPath: optimization.conf
      volumes:
        - name: compliance-worker-postgres-config
          configMap:
            name: compliance-worker-postgres-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compliance-worker-manual
  namespace: {{ .Release.Namespace }}
  labels:
    app: compliance-worker-manual
    cloudql-enabled: true
spec:
  minReadySeconds: 10
  replicas: 1
  selector:
    matchLabels:
      app: compliance-worker-manual
  template:
    metadata:
      labels:
        app: compliance-worker-manual
        cloudql-enabled: true
    spec:
      serviceAccountName: compliance-report-worker
      containers:
        - name: compliance-worker
          image: "{{ .Values.opengovernance.docker.registry }}/compliance-report-job:{{ .Values.opengovernance.docker.tags.complianceReportJob }}"
          command: ["/compliance-report-job"]
          args:
            - --id=$(WORKER_ID)
          imagePullPolicy: Always
          #resources:
          #  limits:
          #    cpu: 2000m
          #    memory: 3Gi
          #  requests:
          #    cpu: 1000m
          #    memory: 3Gi
          env:
            #            - name: STEAMPIPE_HOST
            #              value: "compliance-worker-steampipe"
            #            - name: STEAMPIPE_PORT
            #              value: "9193"
            #            - name: STEAMPIPE_USERNAME
            #              value: "steampipe"
            #            - name: STEAMPIPE_PASSWORD
            #              value: "abcd"
            #            - name: STEAMPIPE_DB
            #              value: "steampipe"
            - name: POSTGRESPLUGIN_HOST
              value: "{{ include "postgres.endpoint" . }}"
            - name: POSTGRESPLUGIN_PORT
              value: "{{ include "postgres.port" . }}"
            - name: POSTGRESPLUGIN_USERNAME
              value: "steampipe_user"
            - name: POSTGRESPLUGIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: steampipeUserPassword
            - name: STEAMPIPE_LOG_LEVEL
              value: "WARN"
            - name: STEAMPIPE_MAX_PARALLEL
              value: "50"
            - name: STEAMPIPE_CACHE
              value: "false"
            - name: STEAMPIPE_UPDATE_CHECK
              value: "false"
            - name: NATS_URL
              value: "{{ .Release.Namespace }}-nats.{{ .Release.Namespace }}.svc.cluster.local:4222"
{{- include "elastic.envs" . | indent 12 }}
            - name: COMPLIANCE_BASEURL
              value: "http://compliance-service.{{ .Release.Namespace }}.svc.cluster.local:7251"
            - name: SCHEDULER_BASEURL
              value: "http://scheduler.{{ .Release.Namespace }}.svc.cluster.local:5251"
            - name: CORE_BASEURL
              value: "http://core-service.{{ .Release.Namespace }}.svc.cluster.local:6251"
            - name: INTEGRATION_BASEURL
              value: "http://integration-service.{{ .Release.Namespace }}.svc.cluster.local:8000"
            - name: ESSINK_BASEURL
              value: "http://es-sink-service.{{ .Release.Namespace }}.svc.cluster.local:8000"

            - name: PROMETHEUS_PUSH_ADDRESS
              value: "prom-system-prometheus-pushgateway.prom-system.svc.cluster.local:9091"

            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: JAEGER_SERVICE_NAME
              value: "compliance-worker"
            - name: JAEGER_SAMPLE_RATE
              value: "0.0005"
            - name: MANUAL_TRIGGER
              value: "true"
          volumeMounts:
            - name: compliance-worker-postgres-config
              mountPath: /home/steampipe/.steampipe/db/14.2.0/data/postgresql.conf.d/optimization.conf
              subPath: optimization.conf
      volumes:
        - name: compliance-worker-postgres-config
          configMap:
            name: compliance-worker-postgres-config
