global:
  domain: og.app.domain
  debugMode: true
  size: lg

opengovernance:
  replicaCount: 1
  docker:
    registry: ghcr.io/opengovern
    tags:
      webui: v2.47.0
      auth: v2.45.2
      swagger: v2.45.2
      checkupJob: v2.46.0
      postInstallJob: v2.45.2
      schedulerService: v2.45.7
      integration: v2.45.2
      core: v2.45.7
      compliance: v2.45.8
      complianceSummarizerJob: v2.45.2
      complianceReportJob: v2.45.2
      cloudql: v2.45.2
      esSink: v2.45.2
      complianceQuick: v2.45.2
      queryRunnerJob: v2.45.2
      queryValidatorJob: v2.45.2
      demoImporterJob: v2.45.6
      psqlImport: v2.45.6
      tasks: v2.26.1-dev.1
      rego: v2.27.1-dev.0
  apikey:
    public: ""
    private: ""
    enabled: false
  webui:
    muiLicense: xxx
  telemetry:
    enabled: true
    baseUrl: "https://stats.opencomply.io"
  vault:
    provider: hashicorp-vault
    aws:
      region: us-east-2
      roleArn: "arn:aws:iam::xxx:role/xxx"
      accessKey: ""
      secretKey: ""
    azure:
      baseUrl: "https://xxx.vault.azure.net"
      tenantId: "xxx"
      clientId: "xxx"
      clientSecret: "xxx"
    keyID: "workspace-creds"
  parallelism:
    complianceReportJobMaxParallelism: 10
    complianceQuickJobMaxParallelism: 5
dex:
  configSecret:
    create: false
  image:
    repository: ghcr.io/opengovern/dex-login
    pullPolicy: Always
    tag: v2.40.0
  config:
    grpc:
      addr: 'localhost:5557'
      reflection: true
    enablePasswordDB: true
    connectors: []
    expiry:
      deviceRequests: "5m"
      signingKeys: "6h"
      idTokens: "24h"
      refreshTokens:
        reuseInterval: "3s"
        validIfNotUsedFor: "2160h" # 90 days
        absoluteLifetime: "3960h" # 165 days
    logger:
      level: "debug"
      format: "text" # can also be "json"
    storage:
      type: postgres
      config:
        host: "opengovernance-postgresql-primary.opengovernance.svc.cluster.local" # postgresql host
        port: 5432
        database: dex
        user: dex_service
        password: "password"
        ssl:
          mode: "disable"
    oauth2:
      passwordConnector: local
      skipApprovalScreen: true
      alwaysShowLoginScreen: false
externalPostgresql:
  enabled: false
  endpoint: "pg.example.com"
  port: "5432"
  masterUser: "postgres"
  masterPassword: "postgres"
  sslMode: disable
postgresql:
  enabled: true
  architecture: replication
  readReplicas:
    replicaCount: 0
  image:
    registry: ghcr.io
    repository: opengovern/postgres
    tag: v2.40.0
    pullPolicy: Always
    debug: false
  global:
    postgresql:
      auth:
        postgresPassword: "postgres"
  primary:
    persistence:
      size: 10Gi
    configuration: |
      listen_addresses = '*'
      max_wal_senders = 10
      shared_preload_libraries = 'pg_stat_statements'
      
      max_connections = 100
      shared_buffers = 768MB
      effective_cache_size = 2304MB
      maintenance_work_mem = 384MB
      checkpoint_completion_target = 0.9
      wal_buffers = 16MB
      default_statistics_target = 500
      random_page_cost = 1.1
      effective_io_concurrency = 200
      work_mem = 4915kB
      huge_pages = off
      min_wal_size = 4GB
      max_wal_size = 16GB
    initdb:
      user: "postgres"
      password: "postgres"
      scripts:
        primary_init_script.sh: |
          #!/bin/bash
          ./init.sh

    resources:
      limits:
        memory: '8Gi'
        cpu: '4'
      requests:
        memory: "2Gi"
        cpu: "2"
    # These passwords are random generated
    # Do not change them
    # You can get the passwords running:
    #`kubectl get secret postgres-secret -n <namespace-name> -o json | jq -r '.data.<key>' | base64 --decode`
    extraEnvVars:
      - name: POSTGRES_WORKSPACE_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: workspaceServiceUserPassword
      - name: POSTGRES_AUTH_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: authServiceUserPassword
      - name: POSTGRES_SUBSCRIPTION_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: subscriptionUserPassword

      - name: POSTGRES_INFORMATION_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: informationUserPassword
      - name: DEX_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: dexServiceUserPassword
      - name : POSTGRES_DESCRIBE_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: schedulerUserPassword
      - name : POSTGRES_POLICY_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: policyServiceUserPassword
      - name: POSTGRES_ASSISTANT_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: assistantServiceUserPassword
      - name: POSTGRES_COMPLIANCE_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: complianceServiceUserPassword
      - name: POSTGRES_CORE_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: coreServiceUserPassword
      - name: POSTGRES_REPORTER_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: reporterServiceUserPassword
      - name: POSTGRES_MIGRATOR_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: migratorServiceUserPassword
      - name: POSTGRES_EXPORTER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: postgresExporterUserPassword
      - name: POSTGRES_STEAMPIPE_USER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: steampipeUserPassword
      - name: POSTGRES_ALERTING_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: alertingServiceUserPassword
      - name: POSTGRES_INTEGRATION_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: integrationServiceUserPassword
      - name: POSTGRES_TASK_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-secret
            key: taskServiceUserPassword
externalOpensearch:
  enabled: false
  endpoint: "https://opensearch.example.com"
  roleArn: "arn:aws:iam::000000000000:role/opensearch-fullaccess"
  awsRegion: "us-east-1"
opensearch:
  enabled: true
  clusterName: opensearch-cluster
  persistence:
    size: 25Gi
  opensearchJavaOpts: "-XX:-HeapDumpOnOutOfMemoryError -Xmx3072M -Xms3072M"
  resources:
  requests:
    cpu: "1000m"
    memory: "6Gi"
  replicas: 2
  extraEnvs:
    - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
      value: myStrongPassword@123!
    - name: AWS_REGION
      value: "us-east-2"
  sysctlInit:
    enabled: true
opensearch-dashboards:
  enabled: true
  replicaCount: 1
  resources:
    requests:
      memory: "500Mi"
      cpu: "200m"
    limits:
      memory: "500Mi"
      cpu: "200m"
nats:
  global:
    labels:
      app: job-queue
  natsBox:
    enabled: false
  config:
    cluster:
      noAdvertise: true
      enabled: false
      replicas: 1
    gateway:
      enabled: false
    jetstream:
      enabled: true
      memoryStore:
        enabled: true
        maxSize: 4Gi
      # we are using jetstream as our job queue, because of that
      # there is no need to have a persistent storage.
      fileStore:
        enabled: true
        storageDirectory: /data
        pvc:
          enabled: false
          size: 25Gi
  container:
    merge:
      resources:
        requests:
          cpu: 200m
          memory: 200Mi
        limits:
          cpu: 2500m
          memory: 5Gi
  statefulSet:
    merge:
      metadata:
        annotations:
          "karpenter.sh/do-not-disrupt": "true"
  promExporter:
    enabled: true
    podMonitor:
      enabled: false
vault-helm: {}
aws:
  accountID: "xxx"
github:
  token: ""
keda:
  enabled: true
populateWithSampleData:
  enabled: false
  fileURL: "https://demo-data.opencomply.io/v1/demo_data.tar.gz.enc"
swagger:
  enabled: false
queryvalidator:
  enabled: false


# Following charts are only enabled if monitoringDebugMode is set to true. They could cause crd collision in existing clusters do not enable them unless you know what you are doing
monitoringDebugMode: true

kube-prometheus-stack:

  alertmanager:
    enabled: false
  prometheus:
    prometheusSpec:
      storageSpec:
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 10Gi
  grafana:
    adminPassword: "opencomply-grafana"
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        es-sink:
          json: |
            {
              "annotations": {
                "list": [
                  {
                    "builtIn": 1,
                    "datasource": {
                      "type": "grafana",
                      "uid": "-- Grafana --"
                    },
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "type": "dashboard"
                  }
                ]
              },
              "editable": true,
              "fiscalYearStartMonth": 0,
              "graphTooltip": 0,
              "id": 1,
              "links": [],
              "panels": [
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "prometheus"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "",
                        "axisPlacement": "auto",
                        "barAlignment": 0,
                        "barWidthFactor": 0.6,
                        "drawStyle": "line",
                        "fillOpacity": 0,
                        "gradientMode": "none",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "linear",
                        "lineWidth": 1,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "auto",
                        "spanNulls": false,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      }
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 7,
                    "w": 24,
                    "x": 0,
                    "y": 0
                  },
                  "id": 2,
                  "options": {
                    "legend": {
                      "calcs": [],
                      "displayMode": "list",
                      "placement": "bottom",
                      "showLegend": true
                    },
                    "tooltip": {
                      "mode": "single",
                      "sort": "none"
                    }
                  },
                  "pluginVersion": "11.4.0",
                  "targets": [
                    {
                      "editorMode": "code",
                      "expr": "rate(opengovernance_es_sink_docs_num_flushed[30s])",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Flush Rate",
                  "type": "timeseries"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "prometheus"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "",
                        "axisPlacement": "auto",
                        "barAlignment": 0,
                        "barWidthFactor": 0.6,
                        "drawStyle": "line",
                        "fillOpacity": 0,
                        "gradientMode": "none",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "linear",
                        "lineWidth": 1,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "auto",
                        "spanNulls": false,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      }
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 24,
                    "x": 0,
                    "y": 7
                  },
                  "id": 1,
                  "options": {
                    "legend": {
                      "calcs": [],
                      "displayMode": "list",
                      "placement": "bottom",
                      "showLegend": true
                    },
                    "tooltip": {
                      "mode": "single",
                      "sort": "none"
                    }
                  },
                  "pluginVersion": "11.4.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "prometheus"
                      },
                      "editorMode": "code",
                      "expr": "opengovernance_es_sink_docs_num_added - opengovernance_es_sink_docs_num_flushed",
                      "legendFormat": "Num Unflushed",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Num unflushed",
                  "type": "timeseries"
                }
              ],
              "preload": false,
              "schemaVersion": 40,
              "tags": [],
              "templating": {
                "list": []
              },
              "time": {
                "from": "now-6h",
                "to": "now"
              },
              "timepicker": {},
              "timezone": "browser",
              "title": "ES Sink",
              "uid": "aebtn21m9u70gd",
              "version": 1,
              "weekStart": ""
            }